1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:교환
test
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:null
test
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:null
test
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
HikariPool-1 - Shutdown initiated...
1. Connection closed
1. Connection.close() returned 
2. Connection closed
2. Connection.close() returned 
3. Connection closed
3. Connection.close() returned 
4. Connection closed
4. Connection.close() returned 
5. Connection closed
5. Connection.close() returned 
6. Connection closed
6. Connection.close() returned 
7. Connection closed
7. Connection.close() returned 
8. Connection closed
8. Connection.close() returned 
9. Connection closed
9. Connection.close() returned 
10. Connection closed
10. Connection.close() returned 
HikariPool-1 - Shutdown completed.
Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3571b748, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3e96bacf, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@484970b0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4470f8a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c83dc97, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7748410a, org.springframework.test.context.event.EventPublishingTestExecutionListener@740773a3, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@37f1104d, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@55740540]
HikariPool-1 - Starting...
1. Connection opened
1. Connection.new Connection returned 
HikariPool-1 - Driver does not support get/set network timeout for connections. (net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.getNetworkTimeout()I)
1. Connection.isReadOnly() returned false
1. Connection.getAutoCommit() returned true
1. Connection.isValid(1) returned true
1. Connection.getTransactionIsolation() returned 2
HikariPool-1 - Start completed.
2. Connection opened
2. Connection.new Connection returned 
2. Connection.isReadOnly() returned false
2. Connection.getAutoCommit() returned true
3. Connection opened
3. Connection.new Connection returned 
3. Connection.isReadOnly() returned false
3. Connection.getAutoCommit() returned true
4. Connection opened
4. Connection.new Connection returned 
4. Connection.isReadOnly() returned false
4. Connection.getAutoCommit() returned true
5. Connection opened
5. Connection.new Connection returned 
5. Connection.isReadOnly() returned false
5. Connection.getAutoCommit() returned true
6. Connection opened
6. Connection.new Connection returned 
6. Connection.isReadOnly() returned false
6. Connection.getAutoCommit() returned true
7. Connection opened
7. Connection.new Connection returned 
7. Connection.isReadOnly() returned false
7. Connection.getAutoCommit() returned true
8. Connection opened
8. Connection.new Connection returned 
8. Connection.isReadOnly() returned false
8. Connection.getAutoCommit() returned true
Property 'mapperLocations' was specified but matching resources are not found.
9. Connection opened
9. Connection.new Connection returned 
9. Connection.isReadOnly() returned false
9. Connection.getAutoCommit() returned true
10. Connection opened
10. Connection.new Connection returned 
10. Connection.isReadOnly() returned false
10. Connection.getAutoCommit() returned true
HV000001: Hibernate Validator 6.2.0.Final
Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
inqCategory 테스트:null
test
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 교환
inqCategory: 교환
결과: 교환 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 교환
inqCategory: 기타
inqCategory: 기타
결과: 이번달 말즈음 입고될 예정입니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 기타
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 환불
inqCategory: 환불
결과: 환불 해드리겠습니다.
랜덤 결과 확인: 0
setter 랜덤값 : 0
멤버 필드 랜덤: 환불
inqCategory: 기타
inqCategory: 기타
